.rules {
  position: absolute;
  top: 50%;
  right: 50%;
  transform: translate(50%, -50%);
  padding: 1em;
  color: $white;
  background-color: rgba(43, 162, 214, 0.9);
  width: 50vw;
  border: 1px solid $colorRed;
  z-index: 2;

  p {
    font-size: .8rem;
  }
}

.center-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  align-content: space-between;
  justify-content: center;
  width: 50%;

  #greets {
    @extend .fade-in;
    font-family: 'Garamond Regular';
    padding: 0 30px 30px 30px;
    color: $colorRed;
    font-size: 2rem;
    background-color: rgba(255, 255, 255, 0.7);
    text-align: center;

    .nclick div {
      text-transform: capitalize;
      color: $colorBlue;
    }

    .greet-name {
      text-transform: capitalize;
    }
  }

  .containrank {
    text-align: center;

    #rank {
      @extend .fade-in;
      font-family: 'Roboto';
      padding: 0 30px 30px 30px;
      color: $grey;
      font-size: 1.3rem;
      background-color: rgba(255, 255, 255, 0.7);
      margin-top: 0.1rem;
      text-align: left;

      span.ranknum {
        width: 25px;
        height: 25px;
        border-radius: 50%;
        background-color: $colorYellow;
        display: inline-block;
        text-align: center;
        margin-right: 0.3em;
      }

      span.ranki {
        text-transform: capitalize;
      }
    }
  }

  .btn-clear {
    font-family: 'Roboto';
    padding: 5px 7px;
    margin-top: 1px;
    color: $grey;
    background-color: $white;
    transition: all ease-out .7s;
    border: none;
    cursor: pointer;

    &:hover {
      color: $colorFade;
      background-color: $colorBlue;
    }
  }
}

.trans {
  opacity: 0.5;
}

.close {
  visibility: hidden;
  opacity: 0;
  transition: visibility 0s 1s,
    opacity 1s linear;
}

.show {
  display: block;
}

.hide {
  display: none;
}

:is(.btn-close-rules, .btn-close-greets, .btn-close-rank) {
  cursor: pointer;

  &::after {
    content: "\2A2F";
    /* https://www.fileformat.info/info/unicode/char/2a2f/index.htm */
    font-size: 35px;
    color: $white;
    margin-left: 94%;
    transition: all 0.5s;
  }

  &:hover::after {
    color: $colorRed;
    transform: rotate(90deg);
  }
}

:is(.matched, .disabled, .trans, .back, .remove-card) {
  pointer-events: none;
}

.cards__container {
  display: grid;
  width: 100%;
  height: 100vh;
  grid-template-rows: repeat(7, calc(100vh/7));
  grid-template-columns: repeat(2, 1fr);
  grid-row-gap: 2px;
  grid-column-gap: 1px;

  .card {
    height: calc(100vh / 7);
    position: relative;
    background-color: $white;
    border: 1px solid $colorRed;
    transition: transform 1s ease-in-out;
    overflow: hidden;
    box-shadow: 1px 1px 1px rgba(0, 0, 0, .3);
    transform-style: preserve-3d;

    .rewards {
      position: absolute;
      z-index: 6;
      width: 80%;
      padding: .2rem;
      background-color: $white;
      text-align: center;
      color: $grey;
      top: 45%;
      font-size: .8rem;
      right: 50%;
      transform: translateX(50%);
    }

    .card_img {
      transition: opacity 1s ease-in-out;
      opacity: 0;

      &:hover {
        cursor: pointer;
      }
    }

    .rotate {
      animation-name: flipInY;
      -webkit-backface-visibility: visible;
      backface-visibility: visible;
      animation-duration: .75s;
    }

    .back {
      transition: transform 1s ease-in-out;
      transform: rotateY(180deg);
      transform-style: preserve-3d;
      opacity: 1;
      z-index: 5;
    }
  }

  .matched,
  .remove-card {
    @extend .fade-out;
    opacity: 0;
  }

}

/* animations */
@keyframes flipInY {
  from {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
    animation-timing-function: ease-in;
  }

  60% {
    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
  }

  to {
    transform: perspective(400px);
  }
}
